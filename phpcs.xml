<?xml version="1.0"?>
<ruleset name="FNet WordPress">
	<description>Customized WordPress Coding Standards by FNet</description>

	<!-- Scan all files in directory -->
	<file>.</file>

	<!-- Scan only PHP files -->
	<arg name="extensions" value="php"/>

	<!-- Ignore WordPress and Composer dependencies -->
	<exclude-pattern>web/wp</exclude-pattern>
	<exclude-pattern>vendor/</exclude-pattern>

	<!-- Show colors in console -->
	<arg value="-colors"/>

	<!-- Show sniff codes in all reports -->
	<arg value="ns"/>

	<config name="testVersion" value="8.2-"/>
	<rule ref="vendor/wp-coding-standards/wpcs/WordPress">
		<exclude name="Universal.Arrays.DisallowShortArraySyntax.Found"/>
		<exclude name="Generic.Formatting.MultipleStatementAlignment.NotSameWarning"/>
		<exclude name="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned"/>
		<exclude name="Universal.Operators.DisallowShortTernary.Found"/>
		<exclude name="WordPress.PHP.YodaConditions"/>
		<exclude name="Generic.PHP.DisallowShortOpenTag.EchoFound"/>
		<exclude name="Squiz.PHP.EmbeddedPhp.ShortOpenEchoNoSemicolon"/>
		<exclude name="WordPress.Files.FileName.InvalidClassFileName"/>

		<!-- Optional rule exceptions for legacy projects -->
		<!--		<exclude name="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase"/>-->
		<!--		<exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>-->
		<!--		<exclude name="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase"/>-->
		<!--		<exclude name="WordPress.NamingConventions.ValidVariableName.VariableNameInvalid"/>-->
		<!--		<exclude name="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase"/>-->
		<!--		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>-->
		<!--		<exclude name="WordPress.NamingConventions.ValidVariableName.InterpolatedVariableNotSnakeCase"/>-->
		<!-- /Optional rule exceptions for legacy projects -->
	</rule>

	<rule ref="Generic.Arrays.DisallowLongArraySyntax">
		<severity>10</severity>
	</rule>

	<!-- Enforce return types, including void -->
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
		<properties>
			<property name="enableObjectTypeHint" value="true"/>
			<property name="enableMixedTypeHint" value="true"/>
		</properties>
		<exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>

	<!-- Enforce type hints for function parameters -->
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
		<properties>
			<property name="enableObjectTypeHint" value="true"/>
			<property name="enableMixedTypeHint" value="true"/>
		</properties>
		<exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification"/>
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>

	<!-- Enforce type hints for class properties -->
	<rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
		<exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification"/>
		<exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.UselessAnnotation"/>
		<exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.UselessAnnotation"/>
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>

	<rule ref="PSR1.Classes.ClassDeclaration"/>

	<!-- Ignore @package enforcing rule for /config/ folder -->
	<rule ref="Squiz.Commenting.FileComment.MissingPackageTag">
		<exclude-pattern>config/*</exclude-pattern>
	</rule>

	<!-- Exclude selected rules for /tests/ folder -->
	<rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.VariableComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.VariableNameInvalid">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
</ruleset>
